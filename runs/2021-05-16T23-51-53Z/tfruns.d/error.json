{
  "message": "AttributeError: in user code:\n\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\training.py:855 train_function  *\n        return step_function(self, iterator)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\training.py:845 step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:1285 run\n        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:2833 call_for_each_replica\n        return self._call_for_each_replica(fn, args, kwargs)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:3608 _call_for_each_replica\n        return fn(*args, **kwargs)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\training.py:838 run_step  **\n        outputs = model.train_step(data)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\training.py:800 train_step\n        self.compiled_metrics.update_state(y, y_pred, sample_weight)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\compile_utils.py:439 update_state\n        self.build(y_pred, y_true)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\compile_utils.py:361 build\n        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\util\\nest.py:1374 map_structure_up_to\n        return map_structure_with_tuple_paths_up_to(\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\util\\nest.py:1472 map_structure_with_tuple_paths_up_to\n        results = [\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\util\\nest.py:1473 <listcomp>\n        func(*args, **kwargs) for args in zip(flat_path_gen, *flat_value_gen)\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\util\\nest.py:1376 <lambda>\n        lambda _, *values: func(*values),  # Discards the path arg.\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\compile_utils.py:485 _get_metric_objects\n        return [self._get_metric_object(m, y_t, y_p) for m in metrics]\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\compile_utils.py:485 <listcomp>\n        return [self._get_metric_object(m, y_t, y_p) for m in metrics]\n    C:\\Users\\aq_94\\AppData\\Roaming\\Python\\Python39\\site-packages\\tensorflow\\python\\keras\\engine\\compile_utils.py:506 _get_metric_object\n        y_t_rank = len(y_t.shape.as_list())\n\n    AttributeError: 'NoneType' object has no attribute 'shape'\n",
  "traceback": ["py_call_impl(callable, dots$args, dots$keywords)", "(structure(function (...) \n{\n    dots <- py_resolve_dots(list(...))\n    result <- py_call_impl(callable, dots$args, dots$keywords)\n    if (convert) \n        result <- py_to_r(result)\n    if (is.null(result)) \n        invisible(result)\n    else result\n}, class = c(\"python.builtin.method\", \"python.builtin.object\"\n), py_object = <environment>))(batch_size = NULL, epochs = 50L, \n    verbose = 2L, validation_split = 0, shuffle = TRUE, class_weight = NULL, \n    sample_weight = NULL, initial_epoch = 0L, x = <environment>, \n    validation_data = <environment>, callbacks = list(<environment>, \n        <environment>, <environment>, <environment>))", "do.call(object$fit, args)", "fit.keras.engine.training.Model(., dataset_use_spec(train_ds, \n    spec = spec_prep), epochs = 50, callbacks = list(callback_early_stopping(patience = 7), \n    callback_reduce_lr_on_plateau(factor = FLAGS$lrannea2)), \n    validation_data = dataset_use_spec(eval_ds, spec_prep), verbose = 2)", "fit(., dataset_use_spec(train_ds, spec = spec_prep), epochs = 50, \n    callbacks = list(callback_early_stopping(patience = 7), callback_reduce_lr_on_plateau(factor = FLAGS$lrannea2)), \n    validation_data = dataset_use_spec(eval_ds, spec_prep), verbose = 2)", "keras_model_sequential() %>% layer_dense_features(dense_features(spec_prep)) %>% \n    layer_dense(units = FLAGS$nodes1, activation = \"relu\") %>% \n    layer_batch_normalization() %>% layer_dense(units = FLAGS$nodes2, \n    activation = \"relu\", kernel_regularizer = regularizer_l2(l = FLAGS$reg1)) %>% \n    layer_batch_normalization() %>% layer_dense(units = FLAGS$nodes3, \n    activation = \"relu\", kernel_regularizer = regularizer_l2(l = FLAGS$reg2)) %>% \n    layer_batch_normalization() %>% layer_dense(units = FLAGS$nodes4, \n    activation = \"relu\") %>% layer_batch_normalization() %>% \n    layer_dense(units = 1, activation = \"sigmoid\") %>% compile(loss = loss_categorical_crossentropy, \n    optimizer = optimizer_adam(lr = FLAGS$lrannea1), metrics = \"accuracy\") %>% \n    fit(dataset_use_spec(train_ds, spec = spec_prep), epochs = 50, \n        callbacks = list(callback_early_stopping(patience = 7), \n            callback_reduce_lr_on_plateau(factor = FLAGS$lrannea2)), \n        validation_data = dataset_use_spec(eval_ds, spec_prep), \n        verbose = 2)", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "tuning_run(\"src/nnet-grid.R\", flags = list(nodes1 = c(32, 64, \n    128), nodes2 = c(32, 64, 128), nodes3 = c(32, 64, 128), nodes4 = c(32, \n    64, 128), reg1 = c(0.25, 0.5, 0.75), reg2 = c(0.25, 0.5, \n    0.75), lrannea1 = c(0.001, 0.01, 0.1), lrannea2 = c(0.1, \n    0.05)), sample = 0.01)"]
}
